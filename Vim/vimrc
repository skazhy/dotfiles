" Reload .vimrc - :so %
"
" Language specific stuff is located
" in ftplugin and ftdetect folders

" Start pathogen & load plugins
exec pathogen#infect('plugins/{}')
exec pathogen#helptags()

filetype plugin on

" Tabs
set tabstop=4     " No. of spaces that tab couns for
set shiftwidth=4  " No. of spaces of each step in autoindent
set expandtab     " Tab inserts spaces
set autoindent    " Copy indent from previous line
set smartindent   " Smart indenting when starting newline

" Don't create swap files in Dropbox
au BufRead,BufNewFile *
\ if expand('%:~') =~ '^\~/Dropbox' |
\ set noswapfile |
\ else |
\ set swapfile |
\ endif

" Remove trailing whitespace on save
au BufWritePre * :%s/\s\+$//e

set history=50      " Remember 50 last commands / patterns
set scrolloff=4     " Keeping 4 line margin above/below cursor
set number          " Start each line with line number
set ignorecase smartcase
set wildignore=*.pyc,*.pdf,*.iml,project/,target/

if has("wildignorecase")  " Ignore filename case
  set wildignorecase      " where it is possible
end

if has("gui_running")
  set incsearch
  set wildmenu
end

set gdefault  " Invert `g` flag behavior for search/replace.

" Disable ex mode
map Q <Nop>

" Visual settings
syntax on               " Enable syntax hilghlighting
set guioptions-=r       " Remove scrollbar
set guioptions-=T       " Remove toolbar
set guioptions-=m       " Remove menubar
set background=dark
set nohlsearch
set cursorline
colorscheme solarized

set background=dark


" Disable bell
set noerrorbells visualbell t_vb=
autocmd GUIEnter * set visualbell t_vb=

noremap <Left>  <Nop>
noremap <Right> <Nop>
noremap <Up>    <Nop>
noremap <Down>  <Nop>

inoremap <Left>  <esc>:bprevious<cr>
inoremap <Right> <esc>:bnext<cr>
inoremap <Up>    <esc>:bdelete<cr>
inoremap <Down>  <esc>:buffers<cr>

" Preserve indenting when starting a line with #
inoremap # X<BS>#

set hidden   " Allows movement between modified buffers
set autoread

" Statusline
set laststatus=2         " omnipresent statusline
set statusline=          " clear statusline on vimrc reload
set statusline+=%f\      " file name
set statusline+=%m%r%w   " flags (modified, readonly, preview)

set statusline+=[%{strlen(&ft)?&ft:'none'}]                        " filetype
set statusline+=%{fugitive#statusline()}%=                         " Git branch
set statusline+=%{synIDattr(synID(line('.'),col('.'),1),'name')}\  " highlight
set statusline+=%-14.(%l,%c%V%)\ %<%P                              " offset


" NERDTree tweaks
let NERDTreeIgnore = ['\.pyc$', 'target/']
let NERDTreeMapHelp = '<f1>'


" Swapfiles
set directory=$HOME/.vim/swapfiles//

source $HOME/.vim/local.vim

" Use relative numbers in focused normal mode buffers

autocmd FocusLost * :set number
autocmd InsertEnter * :set number

autocmd FocusGained * :set relativenumber
autocmd InsertLeave * :set relativenumber
