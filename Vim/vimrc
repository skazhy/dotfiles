" Reload .vimrc - :so %

" Start pathogen & load plugins
call pathogen#infect('plugins')
call pathogen#helptags()

filetype plugin on

" Tabs
set tabstop=4     " No. of spaces that tab couns for
set shiftwidth=4  " No. of spaces of each step in autoindent
set expandtab     " Tab inserts spaces
set autoindent    " Copy indent from previous line
set smartindent   " Smart indenting when starting newline

au BufRead,BufNewFile *.scala set filetype=scala
au Bufread,BufNewFile *.wsgi  set filetype=python
au FileType ruby setlocal sw=2 sts=2 et
au FileType haml setlocal sw=2 sts=2 et
au FileType html setlocal sw=2 sts=2 et

" Don't create swap files in Dropbox
au BufRead,BufNewFile *
\ if expand('%:~') =~ '^\~/Dropbox' |
\ set noswapfile |
\ else |
\ set swapfile |
\ endif

" Loading json filetype
au BufRead,BufNewFile *.json set filetype=json
au! Syntax json source /home/karlis/.vim/ftplugin/json.vim

" Remove trailing whitespace on save
au BufWritePre * :%s/\s\+$//e


set scrolloff=2     " Keeping 2 line margin above/below cursor
set number          " Start each line with line number
set ignorecase      " Ignoring case when searching for file
set wildignorecase  " Ignore filename case
set wildignore=*.pyc

cd /home/karlis/Projects/

" Disable ex mode
map Q <Nop>

" Visual settings
syntax on               " Enable syntax hilghlighting
set guioptions-=r       " Remove scrollbar
set background=dark
set nohlsearch
colorscheme solarized
set guifont=Mensch\ 10

" Use arrow keys for buffer manipulation
noremap <Left>  :bprevious<cr>
noremap <Right> :bnext<cr>
noremap <Up>    :bdelete<cr>
noremap <Down>  :buffers<cr>

inoremap <Left>  <esc>:bprevious<cr>
inoremap <Right> <esc>:bnext<cr>
inoremap <Up>    <esc>:bdelete<cr>
inoremap <Down>  <esc>:buffers<cr>

set hidden " Allows movement between modified buffers

function! VerticalSplitBuffer(buffer)
    execute "vert belowright sb" a:buffer
endfunction

function! GitCheckOut(buff)
    execute "Git co" a:buff
    execute "edit!"
endfunction

command! -nargs=1 Vb call VerticalSplitBuffer(<f-args>)
command! -nargs=1 Gco call GitCheckOut(<f-args>)
