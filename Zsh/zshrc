setopt prompt_subst

# Case insensitive completion
autoload -U compinit
compinit -C
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'


autoload -U colors && colors # Enable colors in prompt

# The actual directory of the dotfiles repo
export DOTFILES_DIR=$(dirname $(dirname `readlink ~/.zshrc`))

# Prompt
# If at $HOME, echo nothing, if at /foo/bar/baz echo "bar/baz "
relative_path() {
  [[ $HOME == $(print -P %d) ]] && echo "" || echo "$(print -P %2~) "
}

source $DOTFILES_DIR/Zsh/git-prompt.sh
export PS1='$(relative_path)% $(git_prompt_string)%% '

export DO_NOT_TRACK=1  # https://consoledonottrack.com

grin() { grep --exclude-dir={.git,target,checkouts} -RIn "$*" ./*; }
frin()  { find ./* -name "*$**"; }

mkv() {
  virtualenv --python=python3.6 env &> /dev/null
  source env/bin/activate
}

act() {
  [[ -s "env/bin/activate" ]] && source env/bin/activate || source $(git rev-parse --show-toplevel)/env/bin/activate
}

procgrep() {
  ps aux | head -1 && grep "$*" <(ps aux) | sed '$d' | awk '{ sub(/[ \t]+$/, ""); print }'
}

ssh-fingerprints() { for i in ~/.ssh/*.pub; do ssh-keygen -l -f "$i"; done }

export PATH=$PATH:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:~/bin:~/.emacs.d/bin

# Don't mess with window title
DISABLE_AUTO_TITLE=true

# Load credentials, if any
[[ -s "$HOME/.cred.sh" ]] && source "$HOME/.cred.sh"

# Expand SHAs to full-blown github URIs
expand() {
    origin=$(git config --get remote.origin.url | awk -F ":" '{print $2}' | rev | cut -c 5- | rev)
    BASEURI="http://github.com/$origin"
    if [ "$#" -eq "0" ]; then
        echo $BASEURI/commit/`git rev-parse HEAD`
    elif [[ "$1" = "pr" || "$1" = "PR" ]]; then
        echo $BASEURI/pull/`git rev-parse --abbrev-ref HEAD`
    else
        echo $BASEURI/commit/`git rev-parse $1`
    fi
}

# Remove an IP from known_hosts file.
forget-host() {
  [ "$#" -eq "1" ] && sed -i '' "/^$1 ecdsa/d" ~/.ssh/known_hosts
}

alias getshitdone="sudo $DOTFILES_DIR/Zsh/get-shit-done/gsd.sh $DOTFILES_DIR "
alias catl="cat -n" # cat with line numbers
alias rmswap="yes | rm -f ~/.vim/swapfiles/*.sw*"

source $DOTFILES_DIR/Zsh/aliases.sh

export JAVA_OPTS="-Dfile.encoding=UTF-8"
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8"

# History
setopt hist_ignore_all_dups
export SAVEHIST=2000
export HISTFILE="$HOME/.history"

fpath=(~/.zsh/autocomplete $fpath)

alias curlj="curl -H 'Content-Type: application/json'"

# Load platform-specific stuff, if any
[[ -s "$HOME/.zsh/platform.sh" ]] && source "$HOME/.zsh/platform.sh"
